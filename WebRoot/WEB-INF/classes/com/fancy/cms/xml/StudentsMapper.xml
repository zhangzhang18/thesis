<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fancy.cms.dao.StudentsMapper">
	<resultMap id="BaseResultMap" type="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="StuID" jdbcType="INTEGER" property="stuid" />
		<result column="StuName" jdbcType="VARCHAR" property="stuname" />
		<result column="StuSex" jdbcType="CHAR" property="stusex" />
		<result column="StuPwd" jdbcType="VARCHAR" property="stupwd" />
		<result column="StuClass" jdbcType="INTEGER" property="stuclass" />
		<result column="TID" jdbcType="INTEGER" property="tid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		StuID, StuName, StuSex, StuPwd, StuClass, TID
	</sql>
	<select id="selectByExample" parameterType="com.fancy.cms.model.StudentsExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from students
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from students
		where StuID = #{stuid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from students
		where StuID = #{stuid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.fancy.cms.model.StudentsExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from students
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into students (StuID, StuName, StuSex,
		StuPwd, StuClass, TID
		)
		values (#{stuid,jdbcType=INTEGER}, #{stuname,jdbcType=VARCHAR},
		#{stusex,jdbcType=CHAR},
		#{stupwd,jdbcType=VARCHAR},
		#{stuclass,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into students
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="stuid != null">
				StuID,
			</if>
			<if test="stuname != null">
				StuName,
			</if>
			<if test="stusex != null">
				StuSex,
			</if>
			<if test="stupwd != null">
				StuPwd,
			</if>
			<if test="stuclass != null">
				StuClass,
			</if>
			<if test="tid != null">
				TID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="stuid != null">
				#{stuid,jdbcType=INTEGER},
			</if>
			<if test="stuname != null">
				#{stuname,jdbcType=VARCHAR},
			</if>
			<if test="stusex != null">
				#{stusex,jdbcType=CHAR},
			</if>
			<if test="stupwd != null">
				#{stupwd,jdbcType=VARCHAR},
			</if>
			<if test="stuclass != null">
				#{stuclass,jdbcType=INTEGER},
			</if>
			<if test="tid != null">
				#{tid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.fancy.cms.model.StudentsExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from students
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		<set>
			<if test="record.stuid != null">
				StuID = #{record.stuid,jdbcType=INTEGER},
			</if>
			<if test="record.stuname != null">
				StuName = #{record.stuname,jdbcType=VARCHAR},
			</if>
			<if test="record.stusex != null">
				StuSex = #{record.stusex,jdbcType=CHAR},
			</if>
			<if test="record.stupwd != null">
				StuPwd = #{record.stupwd,jdbcType=VARCHAR},
			</if>
			<if test="record.stuclass != null">
				StuClass = #{record.stuclass,jdbcType=INTEGER},
			</if>
			<if test="record.tid != null">
				TID = #{record.tid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		set StuID = #{record.stuid,jdbcType=INTEGER},
		StuName =
		#{record.stuname,jdbcType=VARCHAR},
		StuSex =
		#{record.stusex,jdbcType=CHAR},
		StuPwd =
		#{record.stupwd,jdbcType=VARCHAR},
		StuClass =
		#{record.stuclass,jdbcType=INTEGER},
		TID =
		#{record.tid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		<set>
			<if test="stuname != null">
				StuName = #{stuname,jdbcType=VARCHAR},
			</if>
			<if test="stusex != null">
				StuSex = #{stusex,jdbcType=CHAR},
			</if>
			<if test="stupwd != null">
				StuPwd = #{stupwd,jdbcType=VARCHAR},
			</if>
			<if test="stuclass != null">
				StuClass = #{stuclass,jdbcType=INTEGER},
			</if>
			<if test="tid != null">
				TID = #{tid,jdbcType=INTEGER},
			</if>
		</set>
		where StuID = #{stuid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		set StuName = #{stuname,jdbcType=VARCHAR},
		StuSex =
		#{stusex,jdbcType=CHAR},
		StuPwd = #{stupwd,jdbcType=VARCHAR},
		StuClass =
		#{stuclass,jdbcType=INTEGER},
		TID = #{tid,jdbcType=INTEGER}
		where StuID
		= #{stuid,jdbcType=INTEGER}
	</update>

	<select id="selectBystuId" parameterType="com.fancy.cms.model.Students"
		resultMap="BaseResultMap">

		select * from students where StuID =
		#{stuid,jdbcType=INTEGER}
	</select>
	<select id="selectBystuIdlist" parameterType="com.fancy.cms.model.Students"
		resultMap="BaseResultMap">

		select * from students where StuID =
		#{stuid,jdbcType=INTEGER}
	</select>
	<select id="selectall" resultMap="BaseResultMap" parameterType="com.fancy.cms.model.Students">
		select * from students
	</select>
	<select id="tselectall" resultMap="BaseResultMap" parameterType="com.fancy.cms.model.Students">
		select * from students
	</select>
	<select id="selectByName" resultMap="BaseResultMap"
		parameterType="com.fancy.cms.model.Students">
		select * from students where
		StuName=#{stuname,jdbcType=VARCHAR}
	</select>
	<update id="update" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		set
		StuPwd = #{stupwd,jdbcType=VARCHAR}
		where StuID =
		#{stuid,jdbcType=INTEGER}
	</update>

	<update id="setTidByThesis" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		set
		TID = #{tid,jdbcType=INTEGER}
		where StuID
		=
		#{stuid,jdbcType=INTEGER}
	</update>


	<update id="updateTid" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update students
		set
		TID = #{tid,jdbcType=INTEGER}
		where StuID
		=
		#{stuid,jdbcType=INTEGER}
	</update>


	<select id="selectByTid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">

		select * from students where TID = #{tid,jdbcType=INTEGER}
	</select>
	<select id="getPage" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM students where 1=1
		<if test="stuname != null">
			and StuName LIKE '%${stuname}%'

		</if>
		<if test="begin != null">
			LIMIT #{begin},10
		</if>
	</select>
	<select id="getCount" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*) from students
		where 1=1
		<if test="stuname != null">
			and StuName LIKE '%${stuname}%'
		</if>
	</select>

	<insert id="fromXls" parameterType="com.fancy.cms.model.Students">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into students (StuID, StuName, StuSex,
		StuPwd, StuClass, TID
		)
		values (#{stuid,jdbcType=INTEGER}, #{stuname,jdbcType=VARCHAR},
		#{stusex,jdbcType=CHAR},
		#{stupwd,jdbcType=VARCHAR},
		#{stuclass,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}
		)
	</insert>


	<insert id="fromXls2" parameterType="java.util.List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into students (StuID, StuName, StuSex,
		StuPwd, StuClass, TID
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.stuid},#{item.stuname},#{item.stusex},
			#{item.stupwd},#{item.stuclass},#{item.tid}
			)
		</foreach>
	</insert>

</mapper>