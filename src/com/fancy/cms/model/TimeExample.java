package com.fancy.cms.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TimeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table time
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table time
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table time
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public TimeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table time
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table time
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStunumberIsNull() {
            addCriterion("Stunumber is null");
            return (Criteria) this;
        }

        public Criteria andStunumberIsNotNull() {
            addCriterion("Stunumber is not null");
            return (Criteria) this;
        }

        public Criteria andStunumberEqualTo(Integer value) {
            addCriterion("Stunumber =", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberNotEqualTo(Integer value) {
            addCriterion("Stunumber <>", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberGreaterThan(Integer value) {
            addCriterion("Stunumber >", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("Stunumber >=", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberLessThan(Integer value) {
            addCriterion("Stunumber <", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberLessThanOrEqualTo(Integer value) {
            addCriterion("Stunumber <=", value, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberIn(List<Integer> values) {
            addCriterion("Stunumber in", values, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberNotIn(List<Integer> values) {
            addCriterion("Stunumber not in", values, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberBetween(Integer value1, Integer value2) {
            addCriterion("Stunumber between", value1, value2, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStunumberNotBetween(Integer value1, Integer value2) {
            addCriterion("Stunumber not between", value1, value2, "stunumber");
            return (Criteria) this;
        }

        public Criteria andStustarttimeIsNull() {
            addCriterion("StuStartTime is null");
            return (Criteria) this;
        }

        public Criteria andStustarttimeIsNotNull() {
            addCriterion("StuStartTime is not null");
            return (Criteria) this;
        }

        public Criteria andStustarttimeEqualTo(Date value) {
            addCriterion("StuStartTime =", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeNotEqualTo(Date value) {
            addCriterion("StuStartTime <>", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeGreaterThan(Date value) {
            addCriterion("StuStartTime >", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("StuStartTime >=", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeLessThan(Date value) {
            addCriterion("StuStartTime <", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeLessThanOrEqualTo(Date value) {
            addCriterion("StuStartTime <=", value, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeIn(List<Date> values) {
            addCriterion("StuStartTime in", values, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeNotIn(List<Date> values) {
            addCriterion("StuStartTime not in", values, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeBetween(Date value1, Date value2) {
            addCriterion("StuStartTime between", value1, value2, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStustarttimeNotBetween(Date value1, Date value2) {
            addCriterion("StuStartTime not between", value1, value2, "stustarttime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeIsNull() {
            addCriterion("StuEndTime is null");
            return (Criteria) this;
        }

        public Criteria andStuendtimeIsNotNull() {
            addCriterion("StuEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andStuendtimeEqualTo(Date value) {
            addCriterion("StuEndTime =", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeNotEqualTo(Date value) {
            addCriterion("StuEndTime <>", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeGreaterThan(Date value) {
            addCriterion("StuEndTime >", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("StuEndTime >=", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeLessThan(Date value) {
            addCriterion("StuEndTime <", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeLessThanOrEqualTo(Date value) {
            addCriterion("StuEndTime <=", value, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeIn(List<Date> values) {
            addCriterion("StuEndTime in", values, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeNotIn(List<Date> values) {
            addCriterion("StuEndTime not in", values, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeBetween(Date value1, Date value2) {
            addCriterion("StuEndTime between", value1, value2, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andStuendtimeNotBetween(Date value1, Date value2) {
            addCriterion("StuEndTime not between", value1, value2, "stuendtime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeIsNull() {
            addCriterion("TeaStartTime is null");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeIsNotNull() {
            addCriterion("TeaStartTime is not null");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeEqualTo(Date value) {
            addCriterion("TeaStartTime =", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeNotEqualTo(Date value) {
            addCriterion("TeaStartTime <>", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeGreaterThan(Date value) {
            addCriterion("TeaStartTime >", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TeaStartTime >=", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeLessThan(Date value) {
            addCriterion("TeaStartTime <", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeLessThanOrEqualTo(Date value) {
            addCriterion("TeaStartTime <=", value, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeIn(List<Date> values) {
            addCriterion("TeaStartTime in", values, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeNotIn(List<Date> values) {
            addCriterion("TeaStartTime not in", values, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeBetween(Date value1, Date value2) {
            addCriterion("TeaStartTime between", value1, value2, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeastarttimeNotBetween(Date value1, Date value2) {
            addCriterion("TeaStartTime not between", value1, value2, "teastarttime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeIsNull() {
            addCriterion("TeaEndTime is null");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeIsNotNull() {
            addCriterion("TeaEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeEqualTo(Date value) {
            addCriterion("TeaEndTime =", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeNotEqualTo(Date value) {
            addCriterion("TeaEndTime <>", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeGreaterThan(Date value) {
            addCriterion("TeaEndTime >", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TeaEndTime >=", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeLessThan(Date value) {
            addCriterion("TeaEndTime <", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeLessThanOrEqualTo(Date value) {
            addCriterion("TeaEndTime <=", value, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeIn(List<Date> values) {
            addCriterion("TeaEndTime in", values, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeNotIn(List<Date> values) {
            addCriterion("TeaEndTime not in", values, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeBetween(Date value1, Date value2) {
            addCriterion("TeaEndTime between", value1, value2, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andTeaendtimeNotBetween(Date value1, Date value2) {
            addCriterion("TeaEndTime not between", value1, value2, "teaendtime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeIsNull() {
            addCriterion("TheSartTime is null");
            return (Criteria) this;
        }

        public Criteria andThesarttimeIsNotNull() {
            addCriterion("TheSartTime is not null");
            return (Criteria) this;
        }

        public Criteria andThesarttimeEqualTo(Date value) {
            addCriterion("TheSartTime =", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeNotEqualTo(Date value) {
            addCriterion("TheSartTime <>", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeGreaterThan(Date value) {
            addCriterion("TheSartTime >", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TheSartTime >=", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeLessThan(Date value) {
            addCriterion("TheSartTime <", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeLessThanOrEqualTo(Date value) {
            addCriterion("TheSartTime <=", value, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeIn(List<Date> values) {
            addCriterion("TheSartTime in", values, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeNotIn(List<Date> values) {
            addCriterion("TheSartTime not in", values, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeBetween(Date value1, Date value2) {
            addCriterion("TheSartTime between", value1, value2, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andThesarttimeNotBetween(Date value1, Date value2) {
            addCriterion("TheSartTime not between", value1, value2, "thesarttime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeIsNull() {
            addCriterion("TheEndTime is null");
            return (Criteria) this;
        }

        public Criteria andTheendtimeIsNotNull() {
            addCriterion("TheEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andTheendtimeEqualTo(Date value) {
            addCriterion("TheEndTime =", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeNotEqualTo(Date value) {
            addCriterion("TheEndTime <>", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeGreaterThan(Date value) {
            addCriterion("TheEndTime >", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TheEndTime >=", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeLessThan(Date value) {
            addCriterion("TheEndTime <", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeLessThanOrEqualTo(Date value) {
            addCriterion("TheEndTime <=", value, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeIn(List<Date> values) {
            addCriterion("TheEndTime in", values, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeNotIn(List<Date> values) {
            addCriterion("TheEndTime not in", values, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeBetween(Date value1, Date value2) {
            addCriterion("TheEndTime between", value1, value2, "theendtime");
            return (Criteria) this;
        }

        public Criteria andTheendtimeNotBetween(Date value1, Date value2) {
            addCriterion("TheEndTime not between", value1, value2, "theendtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table time
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table time
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}